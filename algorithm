1 Создать папку seeds_data
0 положить в папку seeds_data/words файлики со словами, если такие есть

2 Создать массив с языками
3 Записать в mapAllLangSen в качестве ключа - язык, в качестве значения - пустой linkedHashMap<String, String>(id, string)
4 Записать в mapAllLangWords в качестве ключа - язык, в качестве значения - пустой linkedHashMap<String, String>(id, word)


6 записать в  setAudio файл audio.csv

7 Создаем AllWordSenLinksMap

6 создать AllSenIdsSet
6 загрузить Links.csv в originalLinksSet
5 создаем две линкед мапы widthAudio и withoutAudio
5 Пройтись по файлу sentences.csv, парсим, если arr[0] содержится в originalLinksSet то{ если arr[0] содержится в setAudio то записываем в mapSenWithAudio arr[0] и всю строку, иначе записываем в mapSenWithoutAudio arr[0] и всю строку}
8 соединяем два мапа в один AllSentences (аудио должны быть сначала) AllSentences
9  Пройтись по мап AllSentences, парсим, если arr[1] содержится в mapAllLangSen то запись в mapAllLangSen.get(arr[1]).put(key, value, экранируя ")

счетчик слов

10 пройтись по карте mapAllLangSen
10.1 создаем карту Word_SentencesLinksMap

10.1.1 если для текущего языка есть одноименный файл в папке seeds_data/words, то слова не считаем, только записываем все слова  в mapAllLangWords.get(lang).put(word, id (из static int supercounter)), если текущего слова там нет, длинна меньше 21, количество ограничиваем dividerom, слова перед записью обрабатываем, (ловер кейс, удаляем цифры, знаки препинания, буквы других языков, странные символы и пустоту)
10.1.2
проходим по карте mapAllLangSen.get(lang) key = id; val = text, внутри проходим по mapAllLangWords.get(lang),если слово содержится в строке val, то записываем в Word_SentencesLinksMap (word, LinkedHashSet with sen ids если текущего ид там нет), если его размер меньше 500 а так же id в AllSenIdsSet
10,1,3 проходим по карте Word_SentencesLinksMap получаем id   mapAllLangWords.get(lang).get(key) value и записываем вAllWordSenLinksMap id_word and value (id_sentence )

если нет файла со словами
10.2.1 создаем карту WordCountMap and Word_SentencesLinksMap
проходим по карте mapAllLangSen.get(lang), парсим, arr[2] обрабатываем, делим пробелом, записываем каждое слово в WordCountMap.put(word, 1) or WordCountMap.put(word, WordCountMap.get(word)+1) and to Word_SentencesMap(key = word, value = LinkedHashSet of arr[0] (ids of sentences) если текущего ид там нет и если его размер меньше 500)
10.2.2 сортируем WordCountMap по value
10.2.3 проходим по WordCountMap и добавляем все слова в mapAllLangWords.get(lang).put(word, id (из static int supercounter)) если текущего слова там нет, длинна меньше 21, количество ограничиваем dividerom, слова перед записью обрабатываем, (ловер кейс, удаляем цифры, знаки препинания, буквы других языков, странные символы и пустоту)
10,2,4 проходим по карте Word_SentencesLinksMap получаем id   mapAllLangWords.get(lang).get(key) value и записываем вAllWordSenLinksMap id_word and value (id_sentence )

11 Пройтись по файлу Links.csv, парсим, если арр(0) и арр(1) содержатся в AllSenIdsSet то записываем в файл seeds_data/Links.tsv всю строку ////////////////

12 Пройтись по mapAllLangSen каждого языка и проверяем если id одержится в AllSenIdsSet, то записываем в файл sentences.tsv////////////////////////

13 Пройтись по mapAllLangWords каждого языка и записываем в файл words.tsv////////////////////////

14 Пройтись по setAudio и проверяем если id одержится в AllSenIdsSet, то записываем в файл audio.tsv///////

15 Пройтись по Word_SentencesLinksMap каждого языка, пройтись по value этой карты, и если значение ЧЧ содержится в AllSenIdsSet, то записываем в файл words_sentences.tsv (word, значение ЧЧ)

16 AllWordSenLinksMap аписать в файл